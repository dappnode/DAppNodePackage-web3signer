version: "3.8"
services:
  brain:
    image: brain.web3signer.dnp.dappnode.eth:0.1.0
    build:
      context: brain
    environment:
      - LOG_LEVEL=debug
    restart: unless-stopped
    volumes:
      - brain_data:/app/data
  web3signer:
    image: web3signer.web3signer.dnp.dappnode.eth:0.1.0
    healthcheck:
      test: >-
        curl -H 'Host: web3signer.web3signer.dappnode'
        http://localhost:9000/healthcheck
      interval: 5s
      timeout: 5s
      retries: 100
    depends_on:
      flyway:
        condition: service_completed_successfully
    security_opt:
      - seccomp:unconfined
    build:
      context: web3signer
      dockerfile: Dockerfile
      args:
        UPSTREAM_VERSION: 24.12.0
    environment:
      JAVA_OPTS: "-Xmx6g"
      EXTRA_OPTS: ""
      WEB3SIGNER_VERTX_WORKER_POOL_SIZE: "20"
    volumes:
      - web3signer_data:/data
    restart: unless-stopped
  flyway:
    build:
      context: flyway
      dockerfile: Dockerfile
      args:
        UPSTREAM_VERSION: 24.12.0
    depends_on:
      postgres:
        condition: service_started
    image: flyway.web3signer.dnp.dappnode.eth:0.1.0
    restart: on-failure
  postgres:
    image: postgres.web3signer.dnp.dappnode.eth:0.1.0
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
    build:
      context: postgres
      dockerfile: Dockerfile
      args:
        UPSTREAM_VERSION: 24.12.0
    user: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
volumes:
  brain_data: {}
  web3signer_data: {}
  postgres_data: {}
